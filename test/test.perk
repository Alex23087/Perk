import "stdio.h"
import "stdlib.h"
import "malloc.h"
import "stdint.h"

extern printf : (char*, ...) -> int

archetype UIElement {
    posx : float,
    posy : float,

    //opt: float?,

    draw : () -> void
}

model Button: UIElement {
    let constructor := (posx: float, posy: float): void => {
        self.posx = posx;
        self.posy = posy;
    },
    
    let posx : float = 0.,
    let posy : float = 0.,

    let pos: (float * float) = (self.posx, self.posy),

    let where_am_i := () : (float * float) => {
        return (self.posx, self.posy);
    },
    
    let draw := () : void => {
        printf("drawn button at (%f, %f)\n", self.posx, self.pos[1]);
    }

    // let x = (EqPlusMonad){button->Eq, button->Monad, button->self}
    // x->Eq->functia()

}

fun main(): int {
    let but := summon Button(10., 0.);
    let test : float? = 10.;
    // let test2 : [Button]? = nothing;
    let b := (but ~> UIElement);
    b.draw();
    but.draw();
    move(b, 20., 30.);
    but.pos = but.where_am_i();
    b.draw();
    but.draw();
    banish but;
}

fun move(b: <UIElement>, x: float, y: float): void {
    b.posx = x;
    b.posy = y;
}