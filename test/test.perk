BEGIN_C
#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>
END_C;

let counter: int = 0;
let increase: uint8_t -> void = (uint8_t i): void => {
    counter = counter + i;
};

let map : (((int -> int) * int * int*) -> int*) = (f : int -> int, n : int, A : int*): int* => {
    let res : int* = malloc(n * 4);
    
    let i : int = 0;
    
    BEGIN_C
    for(i = 0; i < n; i ++) {
        res[i] = f(A[i]);
    }
    END_C;
    
    return res
};

fun main(): int {
    let square : int -> int = (a : int): int => {
        return a * a
    };

    BEGIN_C
    int* A = malloc(10 * sizeof(int));
    
    for (int i = 0; i < 10; i++)
        A[i] = i;
    END_C;
    
    let B : int* = map(square, 10, A);
    
    // BEGIN_C
    // for (int i = 0; i < 10; i++)
    //     printf("%d\t%d\n", A[i], B[i]);
    // END_C

    for (let i: int = 0; i < 10; i = i+1) {
        BEGIN_C
        printf("%d\t%d\n", A[i], B[i]);
        END_C
    };
}
